/* This file is part of the the dci project. Copyright (C) 2013-2021 vopl, shtoba.
   This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public
   License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
   This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty
   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details.
   You should have received a copy of the GNU Affero General Public License along with this program. If not, see <https://www.gnu.org/licenses/>. */

require "address.idl"

scope net
{
    scope link
    {
        /////////////////////////////////////////////////////////
        struct Ip4Address
        {
            net::Ip4Address address;
            net::Ip4Address netmask;
            net::Ip4Address broadcast;
        }

        enum Ip6AddressScope
        {
            null,
            host,
            link,
            site,
            global,
        }

        struct Ip6Address
        {
            net::Ip6Address address;
            uint8           prefixLength;
            Ip6AddressScope scope;
        }

        alias Address = variant<Ip4Address, Ip6Address>;

        flags Flags
        {
            up          = 0x1,
            running     = 0x2,
            broadcast   = 0x4,
            loopback    = 0x8,
            p2p         = 0x10,
            multicast   = 0x20,
        }
    }

    /////////////////////////////////////////////////////////
    interface Link
    {
        in  id          () -> uint32;
        in  name        () -> string;
        in  flags       () -> link::Flags;
        in  mtu         () -> uint32;
        in  hwAddr      () -> list<uint8>;
        in  addr        () -> list<link::Address>;

        out changed     ();
        out removed     ();
    }
}
